template: ntmc-1.7.10 # Changing this will nuke the template project and setup a new one

name: GT NEI Ore Plugin
modid: gtnoppiston
description: A forge mod which adds NEI plugins for GT5's ores. A rewrite of the original mod
# Other mcmod.info fields. All are optional
url: https://github.com/NinthTechMC/GTNEIOrePlugin
authors:
- GWYOG
- Pistonight

# This version will be in mcmod.info and depends on the template, injected into java code
version: 1.1.1
artifact-version: 1.7.10-1.1.1

# This is auto detected from src directory
# as the first directory that doesn't contain a single directory
# If it should be different, uncomment this
# ---
# group: pistonmc.mymodid

# This is name.replace(' ', '-') by default
# If it should be different, uncomment this
# ---
archives-base-name: GTNIOrePlugin-PistonEdition

# The api package for the -api.jar
# Uncomment this if you have one
# ---
api: pistonmc.gtnop.api

# Uncomment if you have a coremod. Put the fully qualified name here
# ---
# coremod: pistonmc.mymodid.coremod.CoremodPlugin

# The access transformer files. 
# Remove this if you don't need access transformers
# ---
# access-transformers:
# - my_at.cfg

# The mixin package. Uncomment if you have mixins
# ---
# mixins: pistonmc.mymodid.mixins

# urls or local paths of mods to download into the run/mods folder
mods: [] # put GC in mods folder manually, since there's no CDN that distributes it

# urls or local paths of dev jars to download into libs
libs:
- gregtech-5.09.33-dev.jar
- industrialcraft-2-2.2.823-experimental-dev.jar
- https://github.com/GTNewHorizons/twilightforest/releases/download/2.5.2-pre/TwilightForest-2.5.2-pre-dev.jar
- https://github.com/GTNewHorizons/CodeChickenCore/releases/download/1.2.1/CodeChickenCore-1.2.1-dev.jar
- https://github.com/GTNewHorizons/CodeChickenLib/releases/download/1.2.1/CodeChickenLib-1.2.1-dev.jar
- https://github.com/GTNewHorizons/NotEnoughItems/releases/download/2.5.6-GTNH-pre/NotEnoughItems-2.5.6-GTNH-pre-dev.jar

# A mapping of properties to override in generated gradle.properties
# ---
# gradle-overrides: {}

# Paths to copy to the target directory
# Each path will be copied to target/{path}. If you want to customize the path in target, use [src, dst]
# This is useful if you need to override some files in the template, for example dependencies.gradle
# Directories will be scanned recursively.
#
# use "null" as the source to delete a file or directory in the target
# deletion will happen before copying
# ---
copy-paths:
- ["null", src]
- [src, src/main/java]
- [assets, src/main/resources/assets]
# - [meta, src/main/resources/META-INF]
# - dependencies.gradle # same as [dependencies.gradle, dependencies.gradle]
